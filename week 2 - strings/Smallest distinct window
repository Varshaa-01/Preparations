https://practice.geeksforgeeks.org/problems/smallest-distant-window3132/1#

class Solution {
    public String findSubString( String str) {
        // Your code goes here
        HashSet<Character> hs=new HashSet<>();
        for(int i=0;i<str.length();i++){
            hs.add(str.charAt(i));
        }
        int ans=str.length();
        int si=0;
        int ei=-1;
        int i=-1,j=-1;
        HashMap<Character,Integer>map=new HashMap<>();
        while(i<str.length()-1){
            while(i<str.length()-1 && hs.size()>map.size()){
                i++;
                char ch=str.charAt(i);
                int v=map.getOrDefault(ch,0);
                map.put(ch,v+1);
            }
            while(j<i && map.size()==hs.size()){
                int len=i-j;
                if(len<=ans){
                    ans=len;
                    si=j;
                    ei=i;
                    
                }
                j++;
                char c=str.charAt(j);
                int v=map.get(c);
                if(v==1){
                    map.remove(c);
                }
                else{
                    map.put(c,v-1);
                }
            }
        }
        return str.substring(si+1,ei+1);
    }
}
