https://practice.geeksforgeeks.org/problems/sort-a-linked-list/1#

static Node mergeSort(Node head)
    {
        // add your code here
        if(head==null || head.next==null)
            return head;
        Node mid=findMid(head);
        Node second=mid.next;
        mid.next=null;
        Node left=mergeSort(head);
        Node right=mergeSort(second);
        return merge(left,right);
    }
    static Node findMid(Node node){
        if(node==null)
            return null;
        Node slow=node;
        Node fast=node;
        while(fast.next!=null&&fast.next.next!=null){
            slow=slow.next;
            fast=fast.next.next;
        }
        return slow;
    }
    static Node merge(Node left,Node right){
        if(left==null)
            return right;
        if(right==null)
            return left;
        Node result=null;
        if(left.data<=right.data){
            result=left;
            result.next=merge(left.next,right);
        }
        else{
            result=right;
            result.next=merge(left,right.next);
        }
        return result;
    }
